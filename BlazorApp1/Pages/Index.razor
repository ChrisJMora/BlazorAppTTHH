@page "/"
@inject NavigationManager NavigationManager

@{
    @using BlazorApp1.Services;
    @using BlazorApp1.Models;
}

<h1 class="login-header">Ingresar Credenciales</h1>

@if (errorMessage != null)
{
    <p class="error-message">@errorMessage</p>
}

<form @onsubmit="HandleFormSubmit">
    <div class="container">
        <div class="login-container">
            <div class="form-group">
                <label class="form-label">Correo:</label>
                <input @bind="email" class="form-input" />
            </div>

            <div class="form-group">
                <label class="form-label">Contraseña:</label>
                <input type="password" @bind="password" class="form-input" />
            </div>

            <div>
                <select @bind="selectedEmisor">
                    @if (emisores != null)
                    {
                        foreach (var emisor in emisores)
                        {
                            <option value="@emisor.Codigo">@emisor.Codigo @emisor.NombreEmisor</option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <label class="forgot">Se ha olvidado la contraseña</label>
            </div>

            <button type="submit" class="custom-button">
                Aceptar
            </button>
        </div>
    </div>
</form>

@if (showPopup)
{
    <div class="popup-overlay">
        <div class="popup">
            <button class="close-button" @onclick="ClosePopup">&times;</button>
            <div class="popup-content">
                <h2>User Information:</h2>
                <p><strong>Name:</strong> @userInfo?.NombreUsuario</p>
                <p><strong>Profile:</strong> @userInfo?.Perfil</p>
            </div>
        </div>
    </div>
}


@code {
    private string? email;
    private string? password;
    private string? errorMessage;
    private List<Emisor>? emisores;
    private bool showPopup = false;
    private Usuario userInfo;
    private int? selectedEmisor;

    protected override async Task OnInitializedAsync()
    {
        emisores = await ApiService.Singleton().ObtenerEmisores();
    }

    private async Task HandleFormSubmit()
    {
        Console.WriteLine(selectedEmisor + "selcted" + userInfo);
        userInfo = await ApiService.Singleton().ObtenerUsuario(email, password);
        if (userInfo.Observacion == "INGRESO EXITOSO" || userInfo.Compania == selectedEmisor)
        {
            showPopup = true;
        }
        else
        {
            errorMessage = "El usuario no tiene acceso a este emisor.";
        }
        

    }

    private void ClosePopup()
    {
        NavigationManager.NavigateTo($"/fetchdata?email={email}&password={password}");
        showPopup = false;
    }
}
